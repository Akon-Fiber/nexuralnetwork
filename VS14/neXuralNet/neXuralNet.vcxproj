<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" ToolsVersion="14.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <Import Project="..\packages\rapidjson.1.1.0\build\native\rapidjson.props" Condition="Exists('..\packages\rapidjson.1.1.0\build\native\rapidjson.props')" />
  <Import Project="..\packages\OpenCV_VS2015_3.2.0_NoContribs.1.0.1\build\native\OpenCV_VS2015_3.2.0_NoContribs.props" Condition="Exists('..\packages\OpenCV_VS2015_3.2.0_NoContribs.1.0.1\build\native\OpenCV_VS2015_3.2.0_NoContribs.props')" />
  <ItemGroup Label="ProjectConfigurations">
    <ProjectConfiguration Include="Debug|Win32">
      <Configuration>Debug</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|Win32">
      <Configuration>Release</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Debug|x64">
      <Configuration>Debug</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|x64">
      <Configuration>Release</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
  </ItemGroup>
  <PropertyGroup Label="Globals">
    <ProjectGuid>{36C931FD-0B6B-4512-95CF-562C06122972}</ProjectGuid>
    <RootNamespace>nexuralnet</RootNamespace>
    <ProjectName>nexuralnet</ProjectName>
    <WindowsTargetPlatformVersion>8.1</WindowsTargetPlatformVersion>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'" Label="Configuration">
    <ConfigurationType>StaticLibrary</ConfigurationType>
    <UseDebugLibraries>true</UseDebugLibraries>
    <PlatformToolset>v140</PlatformToolset>
    <CharacterSet>MultiByte</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'" Label="Configuration">
    <ConfigurationType>StaticLibrary</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <PlatformToolset>v140</PlatformToolset>
    <WholeProgramOptimization>true</WholeProgramOptimization>
    <CharacterSet>MultiByte</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="Configuration">
    <ConfigurationType>StaticLibrary</ConfigurationType>
    <UseDebugLibraries>true</UseDebugLibraries>
    <PlatformToolset>v140</PlatformToolset>
    <CharacterSet>MultiByte</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="Configuration">
    <ConfigurationType>StaticLibrary</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <PlatformToolset>v140</PlatformToolset>
    <WholeProgramOptimization>true</WholeProgramOptimization>
    <CharacterSet>MultiByte</CharacterSet>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
  <ImportGroup Label="ExtensionSettings">
  </ImportGroup>
  <ImportGroup Label="Shared">
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <PropertyGroup Label="UserMacros" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
    <OutDir>$(SolutionDir)$(Platform)\$(Configuration)\</OutDir>
    <IntDir>$(Platform)\$(Configuration)\</IntDir>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
    <IntDir>$(Platform)\$(Configuration)\</IntDir>
    <OutDir>$(SolutionDir)$(Platform)\$(Configuration)\</OutDir>
  </PropertyGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <Optimization>Disabled</Optimization>
      <SDLCheck>true</SDLCheck>
      <RuntimeLibrary>MultiThreadedDebug</RuntimeLibrary>
    </ClCompile>
    <Link />
    <PostBuildEvent>
      <Command>
      </Command>
    </PostBuildEvent>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <Optimization>Disabled</Optimization>
      <SDLCheck>false</SDLCheck>
      <RuntimeLibrary>MultiThreadedDebug</RuntimeLibrary>
    </ClCompile>
    <Link />
    <PostBuildEvent>
      <Command>
      </Command>
    </PostBuildEvent>
    <Link>
      <GenerateDebugInformation>true</GenerateDebugInformation>
    </Link>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <Optimization>MaxSpeed</Optimization>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <SDLCheck>true</SDLCheck>
      <RuntimeLibrary>MultiThreaded</RuntimeLibrary>
    </ClCompile>
    <Link>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <OptimizeReferences>true</OptimizeReferences>
    </Link>
    <PostBuildEvent>
      <Command>
      </Command>
    </PostBuildEvent>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <Optimization>MaxSpeed</Optimization>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <SDLCheck>true</SDLCheck>
      <RuntimeLibrary>MultiThreaded</RuntimeLibrary>
    </ClCompile>
    <Link>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <OptimizeReferences>true</OptimizeReferences>
    </Link>
    <PostBuildEvent>
      <Command>
      </Command>
    </PostBuildEvent>
  </ItemDefinitionGroup>
  <ItemGroup>
    <ClInclude Include="..\..\src\nexuralnet\api\exports_api.h" />
    <ClInclude Include="..\..\src\neXuralNet\dnn.h" />
    <ClInclude Include="..\..\src\neXuralNet\dnn\data_types\general_data_types.h" />
    <ClInclude Include="..\..\src\neXuralNet\dnn\data_types\layer_settings.h" />
    <ClInclude Include="..\..\src\neXuralNet\dnn\data_types\layer_shape.h" />
    <ClInclude Include="..\..\src\neXuralNet\dnn\data_types\tensor.h" />
    <ClInclude Include="..\..\src\nexuralnet\dnn\layers\computational_layers\average_pooling_layer.h" />
    <ClInclude Include="..\..\src\neXuralNet\dnn\layers\computational_layers\computational_base_layer.h" />
    <ClInclude Include="..\..\src\neXuralNet\dnn\layers\computational_layers\computational_layers.h" />
    <ClInclude Include="..\..\src\neXuralNet\dnn\layers\computational_layers\convolutional_layer.h" />
    <ClInclude Include="..\..\src\neXuralNet\dnn\layers\computational_layers\dropout_layer.h" />
    <ClInclude Include="..\..\src\neXuralNet\dnn\layers\computational_layers\fully_connected_layer.h" />
    <ClInclude Include="..\..\src\neXuralNet\dnn\layers\computational_layers\i_computational_layer.h" />
    <ClInclude Include="..\..\src\neXuralNet\dnn\layers\computational_layers\leaky_relu_layer.h" />
    <ClInclude Include="..\..\src\nexuralnet\dnn\layers\computational_layers\max_pooling_layer.h" />
    <ClInclude Include="..\..\src\neXuralNet\dnn\layers\computational_layers\relu_layer.h" />
    <ClInclude Include="..\..\src\neXuralNet\dnn\layers\computational_layers\tanh_layerh.h" />
    <ClInclude Include="..\..\src\neXuralNet\dnn\layers\input_layers\bgr_image_input_layer.h" />
    <ClInclude Include="..\..\src\neXuralNet\dnn\layers\input_layers\gray_image_input_layer.h" />
    <ClInclude Include="..\..\src\neXuralNet\dnn\layers\input_layers\input_base_class.h" />
    <ClInclude Include="..\..\src\neXuralNet\dnn\layers\input_layers\input_layers.h" />
    <ClInclude Include="..\..\src\neXuralNet\dnn\layers\input_layers\i_input_layer.h" />
    <ClInclude Include="..\..\src\neXuralNet\dnn\layers\input_layers\tensor_input_layer.h" />
    <ClInclude Include="..\..\src\neXuralNet\dnn\layers\i_layer.h" />
    <ClInclude Include="..\..\src\neXuralNet\dnn\layers\loss_layers\i_loss_layer.h" />
    <ClInclude Include="..\..\src\neXuralNet\dnn\layers\loss_layers\loss_base_layer.h" />
    <ClInclude Include="..\..\src\neXuralNet\dnn\layers\loss_layers\loss_layers.h" />
    <ClInclude Include="..\..\src\neXuralNet\dnn\layers\loss_layers\mse_loss_layer.h" />
    <ClInclude Include="..\..\src\nexuralnet\dnn\layers\loss_layers\multi_class_classification_result.h" />
    <ClInclude Include="..\..\src\nexuralnet\dnn\layers\loss_layers\regression_result.h" />
    <ClInclude Include="..\..\src\neXuralNet\dnn\layers\loss_layers\softmax_loss_layer.h" />
    <ClInclude Include="..\..\src\neXuralNet\dnn\network\network.h" />
    <ClInclude Include="..\..\src\neXuralNet\dnn\network\network_trainer.h" />
    <ClInclude Include="..\..\src\neXuralNet\dnn\solvers\base_solver.h" />
    <ClInclude Include="..\..\src\neXuralNet\dnn\solvers\i_solver.h" />
    <ClInclude Include="..\..\src\neXuralNet\dnn\solvers\sgd.h" />
    <ClInclude Include="..\..\src\neXuralNet\dnn\solvers\sgd_momentum.h" />
    <ClInclude Include="..\..\src\neXuralNet\dnn\solvers\solvers.h" />
    <ClInclude Include="..\..\src\nexuralnet\dnn\utility\config_reader\config_reader.h" />
    <ClInclude Include="..\..\src\nexuralnet\dnn\utility\config_reader\json_config_reader.h" />
    <ClInclude Include="..\..\src\nexuralnet\dnn\utility\filler.h" />
    <ClInclude Include="..\..\src\neXuralNet\dnn\utility\helper.h" />
    <ClInclude Include="..\..\src\neXuralNet\dnn\utility\params_parser.h" />
    <ClInclude Include="..\..\src\neXuralNet\dnn\utility\serializer\base_serializer.h" />
    <ClInclude Include="..\..\src\neXuralNet\dnn\utility\serializer\serializer.h" />
    <ClInclude Include="..\..\src\neXuralNet\dnn\utility\serializer\json_serializer.h" />
    <ClInclude Include="..\..\src\nexuralnet\dnn\utility\trainer_info_writer\trainer_info_writer.h" />
    <ClInclude Include="..\..\src\neXuralNet\tools.h" />
    <ClInclude Include="..\..\src\nexuralnet\tools\converter.h" />
    <ClInclude Include="..\..\src\neXuralNet\tools\data_reader.h" />
    <ClInclude Include="..\..\src\nexuralnet\tools\data_writer.h" />
  </ItemGroup>
  <ItemGroup>
    <ClCompile Include="..\..\src\nexuralnet\dnn\data_types\layer_settings.cpp" />
    <ClCompile Include="..\..\src\nexuralnet\dnn\data_types\layer_shape.cpp" />
    <ClCompile Include="..\..\src\neXuralNet\dnn\data_types\tensor.cpp" />
    <ClCompile Include="..\..\src\nexuralnet\dnn\layers\computational_layers\average_pooling_layer.cpp" />
    <ClCompile Include="..\..\src\nexuralnet\dnn\layers\computational_layers\computational_base_layer.cpp" />
    <ClCompile Include="..\..\src\nexuralnet\dnn\layers\computational_layers\convolutional_layer.cpp" />
    <ClCompile Include="..\..\src\nexuralnet\dnn\layers\computational_layers\dropout_layer.cpp" />
    <ClCompile Include="..\..\src\nexuralnet\dnn\layers\computational_layers\fully_connected_layer.cpp" />
    <ClCompile Include="..\..\src\nexuralnet\dnn\layers\computational_layers\leaky_relu_layer.cpp" />
    <ClCompile Include="..\..\src\nexuralnet\dnn\layers\computational_layers\max_pooling_layer.cpp" />
    <ClCompile Include="..\..\src\nexuralnet\dnn\layers\computational_layers\relu_layer.cpp" />
    <ClCompile Include="..\..\src\nexuralnet\dnn\layers\computational_layers\tanh_layerh.cpp" />
    <ClCompile Include="..\..\src\nexuralnet\dnn\layers\input_layers\bgr_image_input_layer.cpp" />
    <ClCompile Include="..\..\src\nexuralnet\dnn\layers\input_layers\gray_image_input_layer.cpp" />
    <ClCompile Include="..\..\src\nexuralnet\dnn\layers\input_layers\input_base_class.cpp" />
    <ClCompile Include="..\..\src\nexuralnet\dnn\layers\input_layers\tensor_input_layer.cpp" />
    <ClCompile Include="..\..\src\nexuralnet\dnn\layers\loss_layers\dnn_base_result.cpp" />
    <ClCompile Include="..\..\src\nexuralnet\dnn\layers\loss_layers\dnn_base_result.h" />
    <ClCompile Include="..\..\src\nexuralnet\dnn\layers\loss_layers\loss_base_layer.cpp" />
    <ClCompile Include="..\..\src\nexuralnet\dnn\layers\loss_layers\mse_loss_layer.cpp" />
    <ClCompile Include="..\..\src\nexuralnet\dnn\layers\loss_layers\multi_class_classification_result.cpp" />
    <ClCompile Include="..\..\src\nexuralnet\dnn\layers\loss_layers\regression_result.cpp" />
    <ClCompile Include="..\..\src\nexuralnet\dnn\layers\loss_layers\softmax_loss_layer.cpp" />
    <ClCompile Include="..\..\src\neXuralNet\dnn\network\network.cpp" />
    <ClCompile Include="..\..\src\neXuralNet\dnn\network\network_trainer.cpp" />
    <ClCompile Include="..\..\src\nexuralnet\dnn\solvers\base_solver.h.cpp" />
    <ClCompile Include="..\..\src\nexuralnet\dnn\solvers\sgd.cpp" />
    <ClCompile Include="..\..\src\nexuralnet\dnn\solvers\sgd_momentum.cpp" />
    <ClCompile Include="..\..\src\nexuralnet\dnn\utility\config_reader\config_reader.cpp" />
    <ClCompile Include="..\..\src\nexuralnet\dnn\utility\config_reader\json_config_reader.cpp" />
    <ClCompile Include="..\..\src\nexuralnet\dnn\utility\filler.cpp" />
    <ClCompile Include="..\..\src\nexuralnet\dnn\utility\helper.cpp" />
    <ClCompile Include="..\..\src\nexuralnet\dnn\utility\params_parser.cpp" />
    <ClCompile Include="..\..\src\nexuralnet\dnn\utility\serializer\json_serializer.cpp" />
    <ClCompile Include="..\..\src\nexuralnet\dnn\utility\serializer\serializer.cpp" />
    <ClCompile Include="..\..\src\nexuralnet\dnn\utility\trainer_info_writer\trainer_info_writer.cpp" />
    <ClCompile Include="..\..\src\nexuralnet\tools\converter.cpp" />
    <ClCompile Include="..\..\src\nexuralnet\tools\data_reader.cpp" />
    <ClCompile Include="..\..\src\nexuralnet\tools\data_writer.cpp" />
  </ItemGroup>
  <ItemGroup>
    <None Include="packages.config" />
  </ItemGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
  <ImportGroup Label="ExtensionTargets">
    <Import Project="..\packages\OpenCV_VS2015_3.2.0_NoContribs.1.0.1\build\native\OpenCV_VS2015_3.2.0_NoContribs.targets" Condition="Exists('..\packages\OpenCV_VS2015_3.2.0_NoContribs.1.0.1\build\native\OpenCV_VS2015_3.2.0_NoContribs.targets')" />
    <Import Project="..\packages\rapidjson.1.1.0\build\native\rapidjson.targets" Condition="Exists('..\packages\rapidjson.1.1.0\build\native\rapidjson.targets')" />
  </ImportGroup>
  <Target Name="EnsureNuGetPackageBuildImports" BeforeTargets="PrepareForBuild">
    <PropertyGroup>
      <ErrorText>This project references NuGet package(s) that are missing on this computer. Use NuGet Package Restore to download them.  For more information, see http://go.microsoft.com/fwlink/?LinkID=322105. The missing file is {0}.</ErrorText>
    </PropertyGroup>
    <Error Condition="!Exists('..\packages\OpenCV_VS2015_3.2.0_NoContribs.1.0.1\build\native\OpenCV_VS2015_3.2.0_NoContribs.props')" Text="$([System.String]::Format('$(ErrorText)', '..\packages\OpenCV_VS2015_3.2.0_NoContribs.1.0.1\build\native\OpenCV_VS2015_3.2.0_NoContribs.props'))" />
    <Error Condition="!Exists('..\packages\OpenCV_VS2015_3.2.0_NoContribs.1.0.1\build\native\OpenCV_VS2015_3.2.0_NoContribs.targets')" Text="$([System.String]::Format('$(ErrorText)', '..\packages\OpenCV_VS2015_3.2.0_NoContribs.1.0.1\build\native\OpenCV_VS2015_3.2.0_NoContribs.targets'))" />
    <Error Condition="!Exists('..\packages\rapidjson.1.1.0\build\native\rapidjson.props')" Text="$([System.String]::Format('$(ErrorText)', '..\packages\rapidjson.1.1.0\build\native\rapidjson.props'))" />
    <Error Condition="!Exists('..\packages\rapidjson.1.1.0\build\native\rapidjson.targets')" Text="$([System.String]::Format('$(ErrorText)', '..\packages\rapidjson.1.1.0\build\native\rapidjson.targets'))" />
  </Target>
</Project>